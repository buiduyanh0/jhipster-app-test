package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BorrowAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowAllPropertiesEquals(Borrow expected, Borrow actual) {
        assertBorrowAutoGeneratedPropertiesEquals(expected, actual);
        assertBorrowAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowAllUpdatablePropertiesEquals(Borrow expected, Borrow actual) {
        assertBorrowUpdatableFieldsEquals(expected, actual);
        assertBorrowUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowAutoGeneratedPropertiesEquals(Borrow expected, Borrow actual) {
        assertThat(actual)
            .as("Verify Borrow auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowUpdatableFieldsEquals(Borrow expected, Borrow actual) {
        assertThat(actual)
            .as("Verify Borrow relevant properties")
            .satisfies(a -> assertThat(a.getBorrowDate()).as("check borrowDate").isEqualTo(expected.getBorrowDate()))
            .satisfies(a -> assertThat(a.getReturnDate()).as("check returnDate").isEqualTo(expected.getReturnDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowUpdatableRelationshipsEquals(Borrow expected, Borrow actual) {
        assertThat(actual)
            .as("Verify Borrow relationships")
            .satisfies(a -> assertThat(a.getMember()).as("check member").isEqualTo(expected.getMember()))
            .satisfies(a -> assertThat(a.getBook()).as("check book").isEqualTo(expected.getBook()));
    }
}
